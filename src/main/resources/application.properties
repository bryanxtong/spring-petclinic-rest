# active profiles config
#
# application use two active profiles
#
# one for select repository layer
# ------------------------------------------------
# When using HSQL, use: hsqldb
# When using MySQL, use: mysql
# When using PostgeSQL, use: postgresql
# ------------------------------------------------
#
# one - for select database
# ------------------------------------------------
# When using Spring jpa, use: jpa
# When using Spring JDBC, use: jdbc
# When using Spring Data JPA, use: spring-data-jpa
# ------------------------------------------------

spring.profiles.active=hsqldb,spring-data-jpa

# ------------------------------------------------

server.port=9966
server.servlet.context-path=/petclinic/

spring.messages.basename=messages/messages

logging.level.org.springframework=INFO
#logging.level.org.springframework=DEBUG

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# enable the desired authentication type
# by default the authentication is disabled
petclinic.security.enable=false


#Quarkus
quarkus.http.cors=true
quarkus.http.cors.exposed-headers=errors, content-type
quarkus.datasource.driver=com.mysql.cj.jdbc.Driver
quarkus.hibernate-orm.database.charset=UTF-8
quarkus.hibernate-orm.dialect=org.hibernate.dialect.MariaDB103Dialect
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.dialect.storage-engine=InnoDB

quarkus.security.jdbc.enabled=true
#                .usersByUsernameQuery("select username,password,enabled from users where username=?")
#                .authoritiesByUsernameQuery("select username,role from roles where username=?");
quarkus.security.jdbc.principal-query.sql=SELECT u.password, u.role FROM test_user u WHERE u.username=? 
