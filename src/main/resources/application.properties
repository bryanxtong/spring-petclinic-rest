#Quarkus
quarkus.package.type=uber-jar

#common ------------------------------
#quarkus.log.level=TRACE

#cors
quarkus.http.cors=true
quarkus.http.cors.exposed-headers=errors, content-type

#hibernate
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.charset=UTF-8
quarkus.hibernate-orm.database.generation=drop-and-create

# You need to Spin up a PostgreSQL DB
# docker run --name petclinic -p 5432:5432 -e POSTGRES_PASSWORD=pass -d postgres
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres
%prod.quarkus.datasource.username=petclinic
%prod.quarkus.datasource.password=petclinic
%prod.quarkus.hibernate-orm.sql-load-script = import-pg.sql
%prod.quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
%prod.quarkus.http.port=8082

#openapi
quarkus.swagger-ui.always-include=true

# security
quarkus.security.jdbc.enabled=true
quarkus.security.jdbc.principal-query.sql=SELECT u.password, r.role FROM users u JOIN roles r on (r.username = u.username) WHERE u.username=?
quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true
quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1
quarkus.security.jdbc.principal-query.attribute-mappings.0.index=2
quarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups


# test --------------------------------
%test.quarkus.datasource.db-kind=h2
%test.quarkus.hibernate-orm.sql-load-script = import-test.sql
%test.quarkus.hibernate-orm.database.charset=UTF-8
%test.quarkus.hibernate-orm.log.sql=true

# dev --------------------------------
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.hibernate-orm.database.charset=UTF-8
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.sql-load-script = import-ha.sql

